
# @COPYRIGHT@
# Licensed under MIT license (LICENSE.txt).

Import(['env'])

from SCons.Util import CLVar

tests = [
    'b5d/cl_fcn/build_program.t.h',
    'b5d/cl_fcn/clone_kernel.t.h',
    'b5d/cl_fcn/compile_program.t.h',
    'b5d/cl_fcn/create_buffer.t.h',
    'b5d/cl_fcn/create_command_queue.t.h',
    'b5d/cl_fcn/create_command_queue_with_properties.t.h',
    'b5d/cl_fcn/create_context.t.h',
    'b5d/cl_fcn/create_context_from_type.t.h',
    'b5d/cl_fcn/create_image.t.h',
    'b5d/cl_fcn/create_image_2d.t.h',
    'b5d/cl_fcn/create_image_3d.t.h',
    'b5d/cl_fcn/create_kernel.t.h',
    'b5d/cl_fcn/create_kernels_in_program.t.h',
    'b5d/cl_fcn/create_pipe.t.h',
    'b5d/cl_fcn/create_program_with_binary.t.h',
    'b5d/cl_fcn/create_program_with_built_in_kernels.t.h',
    'b5d/cl_fcn/create_program_with_il.t.h',
    'b5d/cl_fcn/create_program_with_source.t.h',
    'b5d/cl_fcn/create_sampler.t.h',
    'b5d/cl_fcn/create_sampler_with_properties.t.h',
    'b5d/cl_fcn/create_sub_buffer.t.h',
    'b5d/cl_fcn/create_sub_devices.t.h',
    'b5d/cl_fcn/create_user_event.t.h',
    'b5d/cl_fcn/enqueue_barrier.t.h',
    'b5d/cl_fcn/enqueue_barrier_with_wait_list.t.h',
    'b5d/cl_fcn/enqueue_copy_buffer.t.h',
    'b5d/cl_fcn/enqueue_copy_buffer_rect.t.h',
    'b5d/cl_fcn/enqueue_copy_buffer_to_image.t.h',
    'b5d/cl_fcn/enqueue_copy_image.t.h',
    'b5d/cl_fcn/enqueue_copy_image_to_buffer.t.h',
    'b5d/cl_fcn/enqueue_fill_buffer.t.h',
    'b5d/cl_fcn/enqueue_fill_image.t.h',
    'b5d/cl_fcn/enqueue_map_buffer.t.h',
    'b5d/cl_fcn/enqueue_map_image.t.h',
    'b5d/cl_fcn/enqueue_marker.t.h',
    'b5d/cl_fcn/enqueue_marker_with_wait_list.t.h',
    'b5d/cl_fcn/enqueue_migrate_mem_objects.t.h',
    'b5d/cl_fcn/enqueue_native_kernel.t.h',
    'b5d/cl_fcn/enqueue_ndrange_kernel.t.h',
    'b5d/cl_fcn/enqueue_read_buffer.t.h',
    'b5d/cl_fcn/enqueue_read_buffer_rect.t.h',
    'b5d/cl_fcn/enqueue_read_image.t.h',
    'b5d/cl_fcn/enqueue_svm_free.t.h',
    'b5d/cl_fcn/enqueue_svm_map.t.h',
    'b5d/cl_fcn/enqueue_svm_mem_fill.t.h',
    'b5d/cl_fcn/enqueue_svm_memcpy.t.h',
    'b5d/cl_fcn/enqueue_svm_migrate_mem.t.h',
    'b5d/cl_fcn/enqueue_svm_unmap.t.h',
    'b5d/cl_fcn/enqueue_task.t.h',
    'b5d/cl_fcn/enqueue_unmap_mem_object.t.h',
    'b5d/cl_fcn/enqueue_wait_for_events.t.h',
    'b5d/cl_fcn/enqueue_write_buffer.t.h',
    'b5d/cl_fcn/enqueue_write_buffer_rect.t.h',
    'b5d/cl_fcn/enqueue_write_image.t.h',
    'b5d/cl_fcn/finish.t.h',
    'b5d/cl_fcn/flush.t.h',
    'b5d/cl_fcn/get_command_queue_info.t.h',
    'b5d/cl_fcn/get_context_info.t.h',
    'b5d/cl_fcn/get_device_and_host_timer.t.h',
    'b5d/cl_fcn/get_device_ids.t.h',
    'b5d/cl_fcn/get_device_info.t.h',
    'b5d/cl_fcn/get_event_info.t.h',
    'b5d/cl_fcn/get_event_profiling_info.t.h',
    'b5d/cl_fcn/get_extension_function_address.t.h',
    'b5d/cl_fcn/get_extension_function_address_for_platform.t.h',
    'b5d/cl_fcn/get_host_timer.t.h',
    'b5d/cl_fcn/get_image_info.t.h',
    'b5d/cl_fcn/get_kernel_arg_info.t.h',
    'b5d/cl_fcn/get_kernel_info.t.h',
    'b5d/cl_fcn/get_kernel_sub_group_info.t.h',
    'b5d/cl_fcn/get_kernel_work_group_info.t.h',
    'b5d/cl_fcn/get_mem_object_info.t.h',
    'b5d/cl_fcn/get_pipe_info.t.h',
    'b5d/cl_fcn/get_platform_ids.t.h',
    'b5d/cl_fcn/get_platform_info.t.h',
    'b5d/cl_fcn/get_program_build_info.t.h',
    'b5d/cl_fcn/get_program_info.t.h',
    'b5d/cl_fcn/get_sampler_info.t.h',
    'b5d/cl_fcn/get_supported_image_formats.t.h',
    'b5d/cl_fcn/link_program.t.h',
    'b5d/cl_fcn/release_command_queue.t.h',
    'b5d/cl_fcn/release_context.t.h',
    'b5d/cl_fcn/release_device.t.h',
    'b5d/cl_fcn/release_event.t.h',
    'b5d/cl_fcn/release_kernel.t.h',
    'b5d/cl_fcn/release_mem_object.t.h',
    'b5d/cl_fcn/release_program.t.h',
    'b5d/cl_fcn/release_sampler.t.h',
    'b5d/cl_fcn/retain_command_queue.t.h',
    'b5d/cl_fcn/retain_context.t.h',
    'b5d/cl_fcn/retain_device.t.h',
    'b5d/cl_fcn/retain_event.t.h',
    'b5d/cl_fcn/retain_kernel.t.h',
    'b5d/cl_fcn/retain_mem_object.t.h',
    'b5d/cl_fcn/retain_program.t.h',
    'b5d/cl_fcn/retain_sampler.t.h',
    'b5d/cl_fcn/set_command_queue_property.t.h',
    'b5d/cl_fcn/set_default_device_command_queue.t.h',
    'b5d/cl_fcn/set_event_callback.t.h',
    'b5d/cl_fcn/set_kernel_arg.t.h',
    'b5d/cl_fcn/set_kernel_arg_svm_pointer.t.h',
    'b5d/cl_fcn/set_kernel_exec_info.t.h',
    'b5d/cl_fcn/set_mem_object_destructor_callback.t.h',
    'b5d/cl_fcn/set_user_event_status.t.h',
    'b5d/cl_fcn/svm_alloc.t.h',
    'b5d/cl_fcn/svm_free.t.h',
    'b5d/cl_fcn/unload_compiler.t.h',
    'b5d/cl_fcn/unload_platform_compiler.t.h',
    'b5d/cl_fcn/wait_for_events.t.h',
]

env.CxxTest('../check-libclxx_b5d', tests,
           LIBS = CLVar('clxx_b5d_test clxx_info'),
           CXXTEST_CPPPATH = ['..'],
           CXXTEST_LIBPATH = env.get('LIBPATH', CLVar()),
           CXXTEST_TARGET = 'check-libclxx_b5d')

env.Alias('check', [ 'check-libclxx_b5d' ])
env.AlwaysBuild('check-libclxx_b5d')

# Local Variables:
# # tab-width:4
# # indent-tabs-mode:nil
# # End:
# vim: set syntax=scons expandtab tabstop=4 shiftwidth=4:
