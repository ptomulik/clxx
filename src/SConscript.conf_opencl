# @COPYRIGHT@
# Licensed under MIT license (LICENSE.txt).

##############################################################################
# Checking for the existence/feasibility of certain OpenCL functions.
##############################################################################

Import('conf')

import SConsGnu.Cc


def CharacterizeClFunction(conf, fun, code):
    # Check if a function is declared in CL/cl.h
    if conf.CheckClFunctionDeclared(fun, code):
        conf.Define('CLXX_IS_DECLARED_%s' % fun, 1, 'OpenCL header declares %s()' % fun)
        # If declared, check whether it's not deprecated
        if not conf.CheckClFunctionNotDeprecated(fun, code):
            conf.Define('CLXX_IS_DEPRECATED_%s' % fun, 1, '%s is declared as deprecated' % fun)
        # ... and whether libOpenCL.so has it as well
        if conf.TryLinkClFunction(fun, code):
            conf.Define('CLXX_IS_LINKABLE_%s' % fun, 1, 'libOpenCL had the %s when libclxx was build' % fun)

env = conf.env

cc = SConsGnu.Cc.CanonCC(env)

# Prefer locally installed OpenCL library.
if env.Dir('#ext/OpenCL/lib').exists():
    env.AppendUnique(LIBPATH = ['#ext/OpenCL/lib'])
    # FIXME: the distinction should be made based on $LINK not $CC/$CXX
    if cc == 'gcc' or cc == 'clang':
        env.AppendUnique(LINKFLAGS = ['-Wl,-rpath-link=%s' % env.Dir('#ext/OpenCL/lib')])
# Prefer locally installed OpenCL and EGL headers over the system-wide.
if env.Dir('#ext/OpenCL/include').exists():
    env.AppendUnique(CPPPATH = ['#ext/OpenCL/include'])
if env.Dir('#ext/EGL/include').exists():
    env.AppendUnique(CPPPATH = ['#ext/EGL/include'])

# Prepare modified environment for the OpenCL checks
orgEnv = conf.env
conf.env = orgEnv.Clone()
conf.env.AppendUnique(LIBS = ['OpenCL'])

for clver in ('1.0', '1.1', '1.2', '2.0', '2.1', '2.2'):
    if conf.CheckClHVersion(clver):
      cltag = clver.replace('.', '_')
      conf.Define('CLXX_CL_H_VERSION_%s' % cltag, 1, 'Library was built against CL/cl.h which had OpenCL %s features' % clver)

#
# clCloneKernel()
#
# (added in OpenCL 2.1)
_clCloneKernel = \
"""clCloneKernel( (cl_kernel)0,
                  (cl_int*)NULL);
"""
CharacterizeClFunction(conf, 'clCloneKernel', _clCloneKernel)

#
# clCompileProgram()
#
# (added in OpenCL 1.2)
_clCompileProgram = \
"""clCompileProgram(
        (cl_program)NULL,
        0,
        (const cl_device_id*)NULL,
        (const char*)NULL,
        0,
        (const cl_program*)NULL,
        (const char**)NULL,
        (void(CL_CALLBACK*)(cl_program,void*))NULL,
        NULL);
"""
CharacterizeClFunction(conf, 'clCompileProgram', _clCompileProgram)

#
# clCreateCommandQueue()
#
# (removed/deprecated in OpenCL 2.0)
_clCreateCommandQueue = """
clCreateCommandQueue( (cl_context)0,
                      (cl_device_id)0,
                      (cl_command_queue_properties)0,
                      (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateCommandQueue', _clCreateCommandQueue)

#
# clCreateCommandQueueWithProperties()
#
# (added in OpenCL 2.0)
_clCreateCommandQueueWithProperties = \
"""clCreateCommandQueueWithProperties(  (cl_context)0,
                                        (cl_device_id)0,
                                        (cl_queue_properties const*)NULL,
                                        (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateCommandQueueWithProperties', _clCreateCommandQueueWithProperties)

#
# clCreateImage()
#
# (added in OpenCL 1.2)
_clCreateImage = \
"""clCreateImage( (cl_context)0,
                  (cl_mem_flags)0,
                  (const cl_image_format*)NULL,
                  (const cl_image_desc*)NULL,
                  (void*)NULL,
                  (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateImage', _clCreateImage)

#
# clCreateImage2D()
#
# (removed in OpenCL 2.0)
_clCreateImage2D = \
"""clCreateImage2D( (cl_context)0,
                  (cl_mem_flags)0,
                  (const cl_image_format*)NULL,
                  (size_t)0ul,
                  (size_t)0ul,
                  (size_t)0ul,
                  (void*)NULL,
                  (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateImage2D', _clCreateImage2D)

#
# clCreateImage3D()
#
# (removed in OpenCL 2.0)
_clCreateImage3D = \
"""clCreateImage3D( (cl_context)0,
                  (cl_mem_flags)0,
                  (const cl_image_format*)NULL,
                  (size_t)0ul,
                  (size_t)0ul,
                  (size_t)0ul,
                  (size_t)0ul,
                  (size_t)0ul,
                  (void*)NULL,
                  (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateImage3D', _clCreateImage3D)

#
# clCreatePipe()
#
# (removed in OpenCL 2.0)
_clCreatePipe = \
"""clCreatePipe( (cl_context)0,
                 (cl_mem_flags)0,
                 (cl_uint)0u,
                 (cl_uint)0u,
                 (const cl_pipe_properties*)NULL,
                 (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreatePipe', _clCreatePipe)

#
# clCreateProgramWithBuiltInKernels()
#
_clCreateProgramWithBuiltInKernels = \
"""clCreateProgramWithBuiltInKernels( (cl_context)NULL,
                                      0,
                                      (const cl_device_id*)NULL,
                                      (const char*)NULL,
                                      (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateProgramWithBuiltInKernels', _clCreateProgramWithBuiltInKernels)

#
# clCreateProgramWithIL()
#
_clCreateProgramWithIL = \
"""clCreateProgramWithIL( (cl_context)0,
                          (const void*)NULL,
                          (size_t)0ul,
                          (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateProgramWithIL', _clCreateProgramWithIL)

#
# clCreateSampler()
#
# (removed/deprecated in OpenCL 2.0)
_clCreateSampler = """
clCreateSampler( (cl_context)0,
                 (cl_bool)0,
                 (cl_addressing_mode)0,
                 (cl_filter_mode)0,
                 (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateSampler', _clCreateSampler)

#
# clCreateSamplerWithProperties()
#
# (added in OpenCL 2.0)
_clCreateSamplerWithProperties = """
clCreateSamplerWithProperties( (cl_context)0,
                               (const cl_sampler_properties*)NULL,
                               (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateSamplerWithProperties', _clCreateSamplerWithProperties)

#
# clCreateSubBuffer()
#
# (added in OpenCL 1.1)
_clCreateSubBuffer = \
"""clCreateSubBuffer( (cl_mem)0,
                      (cl_mem_flags)0,
                      (cl_buffer_create_type)0,
                      (const void*)NULL,
                      (cl_int*)NULL );
"""
CharacterizeClFunction(conf, 'clCreateSubBuffer', _clCreateSubBuffer)

#
# clCreateSubDevices()
#
_clCreateSubDevices = \
"""clCreateSubDevices(
        (cl_device_id)NULL,
        (const cl_device_partition_property*)NULL,
        0u,
        (cl_device_id*)NULL,
        (cl_uint*)NULL);
"""
CharacterizeClFunction(conf, 'clCreateSubDevices', _clCreateSubDevices)

#
# clCreateUserEvent()
#
# (added in OpenCL 1.1)
_clCreateUserEvent = \
"""clCreateUserEvent((cl_context)0, NULL);
"""
CharacterizeClFunction(conf, 'clCreateUserEvent', _clCreateUserEvent)

#
# clEnqueueBarrier()
#
# (removed in OpenCL 2.0)
_clEnqueueBarrier = \
"""clEnqueueBarrier( (cl_command_queue)0 );
"""
CharacterizeClFunction(conf, 'clEnqueueBarrier', _clEnqueueBarrier)

#
# clEnqueueBarrierWithWaitList()
#
# (added in OpenCL 1.2)
_clEnqueueBarrierWithWaitList = \
"""clEnqueueBarrierWithWaitList( (cl_command_queue)0,
                                 (cl_uint)0,
                                 (const cl_event*)NULL,
                                 (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueBarrierWithWaitList', _clEnqueueBarrierWithWaitList)

#
# clEnqueueCopyBufferRect()
#
# (added in OpenCL 1.1)
_clEnqueueCopyBufferRect = \
"""clEnqueueCopyBufferRect( (cl_command_queue)0,
                            (cl_mem)0,
                            (cl_mem)0,
                            (const size_t*)NULL,
                            (const size_t*)NULL,
                            (const size_t*)NULL,
                             0ul,
                             0ul,
                             0ul,
                             0ul,
                             0u,
                            (const cl_event*)NULL,
                            (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueCopyBufferRect', _clEnqueueCopyBufferRect)

#
# clEnqueueFillBuffer()
#
# (added in OpenCL 1.2)
_clEnqueueFillBuffer = \
"""clEnqueueFillBuffer( (cl_command_queue)0,
                        (cl_mem)0,
                        (const void*)NULL,
                         0ul,
                         0ul,
                         0ul,
                         0u,
                        (const cl_event*)NULL,
                        (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueFillBuffer', _clEnqueueFillBuffer)

#
# clEnqueueFillImage()
#
# (added in OpenCL 1.2)
_clEnqueueFillImage = \
"""clEnqueueFillImage( (cl_command_queue)0,
                        (cl_mem)0,
                        (const void*)NULL,
                        (const size_t*)NULL,
                        (const size_t*)NULL,
                         0u,
                        (const cl_event*)NULL,
                        (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueFillImage', _clEnqueueFillImage)

#
# clEnqueueMarker()
#
# (removed in OpenCL 2.0)
_clEnqueueMarker = \
"""clEnqueueMarker( (cl_command_queue)0,
                    (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueMarker', _clEnqueueMarker)

#
# clEnqueueMarkerWithWaitList()
#
# (added in OpenCL 1.2)
_clEnqueueMarkerWithWaitList = \
"""clEnqueueMarkerWithWaitList( (cl_command_queue)0,
                                (cl_uint)0,
                                (const cl_event*)NULL,
                                (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueMarkerWithWaitList', _clEnqueueMarkerWithWaitList)

#
# clEnqueueMigrateMemObjects()
#
# (added in OpenCL 1.2)
_clEnqueueMigrateMemObjects = \
"""clEnqueueMigrateMemObjects( (cl_command_queue)0,
                                0u,
                               (const cl_mem*)NULL,
                               (cl_mem_migration_flags)0,
                                0u,
                               (const cl_event*)NULL,
                               (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueMigrateMemObjects', _clEnqueueMigrateMemObjects)

#
# clEnqueueReadBufferRect()
#
# (added in OpenCL 1.1)
_clEnqueueReadBufferRect = \
"""clEnqueueReadBufferRect( (cl_command_queue)0,
                            (cl_mem)0,
                            (cl_bool)0,
                            (const size_t*)NULL,
                            (const size_t*)NULL,
                            (const size_t*)NULL,
                             0ul,
                             0ul,
                             0ul,
                             0ul,
                            (void*)NULL,
                             0u,
                            (const cl_event*)NULL,
                            (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueReadBufferRect', _clEnqueueReadBufferRect)

#
# clEnqueueSVMFree()
#
# (added in OpenCL 2.0)
_clEnqueueSVMFree = \
"""clEnqueueSVMFree( (cl_command_queue)0,
                     (cl_uint)0,
                     (void**)NULL,
                     (void (CL_CALLBACK*)(cl_command_queue,cl_uint,void*[],void*))NULL,
                     (void*)NULL,
                     (cl_uint)0,
                     (const cl_event*)NULL,
                     (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueSVMFree', _clEnqueueSVMFree)

#
# clEnqueueSVMMap()
#
# (added in OpenCL 2.0)
_clEnqueueSVMMap = \
"""clEnqueueSVMMap( (cl_command_queue)0,
                    (cl_bool)0,
                    (cl_map_flags)0,
                    (void*)NULL,
                    (size_t)0ul,
                    (cl_uint)0,
                    (const cl_event*)NULL,
                    (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueSVMMap', _clEnqueueSVMMap)

#
# clEnqueueSVMMemFill()
#
# (added in OpenCL 2.0)
_clEnqueueSVMMemFill = \
"""clEnqueueSVMMemFill( (cl_command_queue)0,
                        (void*)NULL,
                        (const void*)NULL,
                        (size_t)0ul,
                        (size_t)0ul,
                        (cl_uint)0,
                        (const cl_event*)NULL,
                        (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueSVMMemFill', _clEnqueueSVMMemFill)

#
# clEnqueueSVMMemcpy()
#
# (added in OpenCL 2.0)
_clEnqueueSVMMemcpy = \
"""clEnqueueSVMMemcpy( (cl_command_queue)0,
                       (cl_bool)0,
                       (void*)NULL,
                       (const void*)NULL,
                       (size_t)0ul,
                       (cl_uint)0,
                       (const cl_event*)NULL,
                       (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueSVMMemcpy', _clEnqueueSVMMemcpy)

#
# clEnqueueSVMMigrateMem()
#
# (added in OpenCL 2.1)
_clEnqueueSVMMigrateMem = \
"""clEnqueueSVMMigrateMem( (cl_command_queue)0,
                           (cl_uint)0,
                           (cl_bool)0,
                           (const void**)NULL,
                           (const size_t*)NULL,
                           (cl_mem_migration_flags)0,
                           (cl_uint)0,
                           (const cl_event*)NULL,
                           (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueSVMMigrateMem', _clEnqueueSVMMemcpy)

#
# clEnqueueSVMUnmap()
#
# (added in OpenCL 2.0)
_clEnqueueSVMUnmap = \
"""clEnqueueSVMUnmap( (cl_command_queue)0,
                      (void*)NULL,
                      (cl_uint)0,
                      (const cl_event*)NULL,
                      (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueSVMUnmap', _clEnqueueSVMMemcpy)

#
# clEnqueueTask()
#
# (removed in OpenCL 2.0)
_clEnqueueTask = \
"""clEnqueueTask( (cl_command_queue)0,
                  (cl_kernel)0,
                  (cl_uint)0,
                  (const cl_event*)NULL,
                  (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueTask', _clEnqueueTask)

#
# clEnqueueWaitForEvents()
#
# (removed in OpenCL 2.0)
_clEnqueueWaitForEvents = \
"""clEnqueueWaitForEvents( (cl_uint)0,
                           (const cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueWaitForEvents', _clEnqueueWaitForEvents)


#
# clEnqueueWriteBufferRect()
#
# (added in OpenCL 1.1)
_clEnqueueWriteBufferRect = \
"""clEnqueueWriteBufferRect( (cl_command_queue)0,
                             (cl_mem)0,
                             (cl_bool)0,
                             (const size_t*)NULL,
                             (const size_t*)NULL,
                             (const size_t*)NULL,
                              0ul,
                              0ul,
                              0ul,
                              0ul,
                             (void*)NULL,
                              0u,
                             (const cl_event*)NULL,
                             (cl_event*)NULL );
"""
CharacterizeClFunction(conf, 'clEnqueueWriteBufferRect', _clEnqueueWriteBufferRect)

#
# clGetDeviceAndHostTimer()
#
# (added in OpenCL 2.1)
_clGetDeviceAndHostTimer = \
"""clGetDeviceAndHostTimer(  (cl_device_id)0,
                             (cl_ulong*)NULL,
                             (cl_ulong*)NULL ) ;
"""
CharacterizeClFunction(conf, 'clGetDeviceAndHostTimer', _clGetDeviceAndHostTimer)

#
# clGetExtensionFunctionAddress()
#
# (removed in OpenCL 1.2)
_clGetExtensionFunctionAddress = \
"""clGetExtensionFunctionAddress(  (const char*)NULL );
"""
CharacterizeClFunction(conf, 'clGetExtensionFunctionAddress', _clGetExtensionFunctionAddress)

#
# clGetExtensionFunctionAddressForPlatform()
#
# (added in OpenCL 1.2)
_clGetExtensionFunctionAddressForPlatform = \
"""clGetExtensionFunctionAddressForPlatform( (cl_platform_id)0,
                                             (const char*)NULL );
"""
CharacterizeClFunction(conf, 'clGetExtensionFunctionAddressForPlatform', _clGetExtensionFunctionAddressForPlatform)

#
# clGetHostTimer()
#
# (added in OpenCL 2.1)
_clGetHostTimer = \
"""clGetHostTimer(  (cl_device_id)0,
                    (cl_ulong*)NULL ) ;
"""
CharacterizeClFunction(conf, 'clGetHostTimer', _clGetHostTimer)

#
# clGetKernelArgInfo()
#
# (added in OpenCL 1.2)
_clGetKernelArgInfo = \
"""clGetKernelArgInfo(  (cl_kernel)0,
                        0,
                        (cl_kernel_arg_info)0,
                        0ul,
                        (void*)NULL,
                        (size_t*)NULL);
"""
CharacterizeClFunction(conf, 'clGetKernelArgInfo', _clGetKernelArgInfo)

#
# clGetKernelSubGroupInfo()
#
# (added in OpenCL 2.1)
_clGetKernelSubGroupInfo = \
"""clGetKernelSubGroupInfo( (cl_kernel)0,
                            (cl_device_id)0,
                            (cl_kernel_sub_group_info)0,
                            (size_t)0ul,
                            (const void*)NULL,
                            (size_t)0ul,
                            (void*)NULL,
                            (size_t*)NULL );
"""
CharacterizeClFunction(conf, 'clGetKernelSubGroupInfo', _clGetKernelSubGroupInfo)

#
# clGetPipeInfo()
#
# (added in OpenCL 2.0)
_clGetPipeInfo = \
"""clGetPipeInfo( (cl_mem)0,
                  (cl_pipe_info)0,
                  (size_t)0ul,
                  (void*)NULL,
                  (size_t*)NULL );
"""
CharacterizeClFunction(conf, 'clGetPipeInfo', _clGetPipeInfo)

#
# clLinkProgram()
#
_clLinkProgram = \
"""clLinkProgram(
        (cl_context)NULL,
        0,
        (const cl_device_id*)NULL,
        (const char*)NULL,
        0,
        (const cl_program*)NULL,
        (void(CL_CALLBACK*)(cl_program,void*))NULL,
        NULL,
        NULL);
"""
CharacterizeClFunction(conf, 'clLinkProgram', _clLinkProgram)

#
# clReleaseDevice()
#
_clReleaseDevice = \
"""clReleaseDevice((cl_device_id)NULL);
"""
CharacterizeClFunction(conf, 'clReleaseDevice', _clReleaseDevice)

#
# clRetainDevice()
#
_clRetainDevice = \
"""clRetainDevice((cl_device_id)NULL);
"""
CharacterizeClFunction(conf, 'clRetainDevice', _clRetainDevice)

#
# clSetCommandQueueProperty()
#
# (removed in OpenCL 1.2)
_clSetCommandQueueProperty = \
"""clSetCommandQueueProperty(  (cl_command_queue)0,
                               (cl_queue_properties)0,
                               (cl_bool)0,
                               (cl_command_queue_properties*) );
"""
CharacterizeClFunction(conf, 'clSetCommandQueueProperty', _clSetCommandQueueProperty)

#
# clSVMAlloc()
#
# (added in OpenCL 2.0)
_clSVMAlloc = \
"""clSVMAlloc( (cl_context)0,
               (cl_svm_mem_flags)0,
               (size_t)0ul,
               (cl_uint)0 );
"""
CharacterizeClFunction(conf, 'clSVMAlloc', _clSVMAlloc)

#
# clSVMFree()
#
# (added in OpenCL 2.0)
_clSVMFree = \
"""clSVMFree( (cl_context)0,
              (void*)NULL );
"""
CharacterizeClFunction(conf, 'clSVMFree', _clSVMFree)

#
# clSetDefaultDeviceCommandQueue()
#
# (added in OpenCL 2.1)
_clSetDefaultDeviceCommandQueue = \
"""clSetDefaultDeviceCommandQueue( (cl_context)0,
                                   (cl_device_id)0,
                                   (cl_command_queue)0 );
"""
CharacterizeClFunction(conf, 'clSetDefaultDeviceCommandQueue', _clSetDefaultDeviceCommandQueue)

#
# clSetEventCallback()
#
# (added in OpenCL 1.1)
_clSetEventCallback = \
"""clSetEventCallback((cl_event)0, 0, NULL, NULL);
"""
CharacterizeClFunction(conf, 'clSetEventCallback', _clSetEventCallback)

#
# clSetKernelArgSVMPointer()
#
# (added in OpenCL 2.0)
_clSetKernelArgSVMPointer = \
"""clSetKernelArgSVMPointer( (cl_kernel)0,
                              0,
                             (const void*)NULL );
"""
CharacterizeClFunction(conf, 'clSetKernelArgSVMPointer', _clSetKernelArgSVMPointer)

#
# clSetKernelExecInfo()
#
# (added in OpenCL 2.0)
_clSetKernelExecInfo = \
"""clSetKernelExecInfo( (cl_kernel)0,
                        (cl_kernel_exec_info)0,
                        0ul,
                        (const void*)NULL );
"""
CharacterizeClFunction(conf, 'clSetKernelExecInfo', _clSetKernelExecInfo)

#
# clSetMemObjectDestructorCallback()
#
# (added in OpenCL 1.2)
_clSetMemObjectDestructorCallback = \
"""clSetMemObjectDestructorCallback( (cl_mem)0,
                                     (void(*)(cl_mem, void*))NULL,
                                     NULL );
"""
CharacterizeClFunction(conf, 'clSetMemObjectDestructorCallback', _clSetMemObjectDestructorCallback)

#
# clSetUserEventStatus()
#
# (added in OpenCL 1.1)
_clSetUserEventStatus = \
"""clSetUserEventStatus((cl_event)0, 0);
"""
CharacterizeClFunction(conf, 'clSetUserEventStatus', _clSetUserEventStatus)

#
# clUnloadCompiler()
#
# (removed in OpenCL 2.0)
_clUnloadCompiler = \
"""clUnloadCompiler();
"""
CharacterizeClFunction(conf, 'clUnloadCompiler', _clUnloadCompiler)

#
# clUnloadPlatformCompiler()
#
_clUnloadPlatformCompiler = \
"""clUnloadPlatformCompiler((cl_platform_id)NULL);
"""
CharacterizeClFunction(conf, 'clUnloadPlatformCompiler', _clUnloadPlatformCompiler)

# Restore the original environment
conf.env = orgEnv
# --without-cl-egl
try:
    if conf.env['ARGUMENTS']['WITHOUT_CL_EGL']:
        conf.Define('CLXX_WITHOUT_CL_EGL', 1, 'Do not inclue CL/cl_egl.h')
except KeyError:
    pass

## # FIXME: for MAC-OS the header is OpenCL/cl.h
## conf.req_headers.append(('CL/cl.h','<>','C'))
## conf.req_libs.append({ 'library' : ['OpenCL'],
##                        'autoadd' : 0,
##                        'header'  : '#include <CL/cl.h>' })

# Local Variables:
# # tab-width:4
# # indent-tabs-mode:nil
# # End:
# vim: set syntax=scons expandtab tabstop=4 shiftwidth=4:
