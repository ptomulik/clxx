
# @COPYRIGHT@
# Licensed under MIT license (LICENSE.txt).

Import('env')

from SCons.Util import CLVar, NodeList
import os

sources =  [
    'b5d/cl_functions.cpp',
]

headers = [
    #
    # b5d/*.hpp
    #
    'b5d/cl_functions.hpp'
]

##headers += [
##    'b5d.hpp'
##]

env['CLXX_PACKAGES']['libclxx_b5d'] = {
    'version' : env.subst('$CLXX_VERSION'),
    'libdeps' : CLVar('OpenCL')
}

objects = env.SharedObject(sources)

overrides = {
    'SHLIBVERSION'  : env['CLXX_PACKAGES']['libclxx_b5d']['version'],
    'LIBS'          : env['CLXX_PACKAGES']['libclxx_b5d']['libdeps']
}

# rlib - "real" libarary
rlib = env.SharedLibrary('../clxx_b5d', objects + ['b5d/mocks/real.cpp'], **overrides)

# tlib - library for testing (OpenCL functions replaced with mocks)
tlib = env.SharedLibrary('../clxx_b5d_test', objects + ['b5d/mocks/mock.cpp'], **overrides)
env.Ignore('../..', tlib)

ilib = env.InstallVersionedLib('${libdir}', rlib, **overrides)
for f in ilib: env.Ignore(f.dir, f)

iheaders = NodeList()
for header in headers:
    [head, tail] = os.path.split(header)
    idir = os.path.join(env.subst("${includedir}"), "clxx", head);
    iheader = env.Install(idir, header)
    env.Ignore(idir, iheader)
    iheaders += iheader

env.Alias('install-libclxx_b5d-headers', iheaders)
env.Alias('install-libclxx_b5d-lib', ilib)
env.Alias('install-libclxx_b5d-dev', ['install-libclxx_b5d-headers', 'install-libclxx_b5d-lib' ])
env.Alias('install','install-libclxx_b5d-dev')

# Local Variables:
# # tab-width:4
# # indent-tabs-mode:nil
# # End:
# vim: set syntax=scons expandtab tabstop=4 shiftwidth=4:
