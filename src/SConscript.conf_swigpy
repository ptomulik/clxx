
# @COPYRIGHT@
# Licensed under MIT license (LICENSE.txt).

#############################################################################
# Configure 'swigpy' tool
#############################################################################

Import('conf')

import SConsGnu.Cc
import distutils.sysconfig

env = conf.env

if env.get('SWIG'):
    env.Tool('swigpy')
else:
    Return()

#############################################################################
# Add local include paths
#############################################################################
if env.Dir('#lib/OpenCL/include').exists():
    env.AppendUnique(SWIGPY_CPPPATH = ['#/lib/OpenCL/include'])
    env.AppendUnique(SWIGPY_SWIGPATH = ['#/lib/OpenCL/include'])
if env.Dir('#lib/EGL/include').exists():
    env.AppendUnique(SWIGPY_CPPPATH = ['#/lib/EGL/include'])
    env.AppendUnique(SWIGPY_SWIGPATH = ['#/lib/EGL/include'])
#############################################################################
# 2. Prefer locally installed OpenCL shared/static library.
#############################################################################
if env.Dir('#lib/OpenCL/lib').exists():
    env.AppendUnique(SWIGPY_LIBPATH = ['#/lib/OpenCL/lib'])

#############################################################################
# SWIGPY
#############################################################################
# SWIGPY_SWIGPATH
env.AppendUnique(SWIGPY_SWIGPATH = ['.'])
env.AppendUnique(SWIGPY_SWIGPATH = ['#%s' % env.Dir('lib/python-clxx').path])
env.AppendUnique(SWIGPY_SWIGPATH = ['#%s' % env.Dir('lib/swig-clxx/python').path])
env.AppendUnique(SWIGPY_SWIGPATH = env.get('SWIGPATH', []))
#env.AppendUnique(SWIGPY_SWIGPATH = ['/usr/include'])

# SWIGPY_SWIGFLAGS
env.AppendUnique(SWIGPY_SWIGFLAGS = env.get('SWIGFLAGS',[]) + ['-enumclass'])

# SWIGPY_CPPPATH
env.AppendUnique(SWIGPY_CPPPATH = [ '#%s' % env.Dir('lib').path ])
env.AppendUnique(SWIGPY_CPPPATH = [ '#%s' % env.Dir('lib/swig-clxx').path ])
env.AppendUnique(SWIGPY_CPPPATH = distutils.sysconfig.get_python_inc())

# CFLAGS and SWIGPY_CXXFLAGS
env.SetDefault(SWIGPY_CFLAGS = env.get('CFLAGS',[])[:])
env.SetDefault(SWIGPY_CXXFLAGS = env.get('CXXFLAGS',[])[:])

try:
    swigver = tuple([int(n) for n in env.subst('$SWIGVERSION').split('.')])
except ValueError:
    swigver = (1,0)

# Additional SWIG flags for python. This evolved over months. Flags were
# adjusted experimentally. Think twice before you decide to change anything!!
cc = SConsGnu.Cc.CanonCC(env)
if cc == 'gcc':
    if '-Werror' in env['SWIGPY_CFLAGS']:
        if env.get('CC_HAS_FLAG', {}).get('-Wmaybe-uninitialized'):
            env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-maybe-uninitialized' ])
        env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-unused-parameter' ])
        env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-unused-label' ])
        env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-deprecated-declarations' ])
        env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-pedantic' ])
        env.AppendUnique(SWIGPY_SWIGFLAGS = [ '-D__GNUC__' ])
        env.AppendUnique(SWIGPY_SWIGFLAGS = [ '-D__STRICT_ANSI__' ])
        # NOTE: Original OpenCL headers have some ill-formed comments, see:
        # https://www.khronos.org/bugzilla/show_bug.cgi?id=552
        # https://www.khronos.org/bugzilla/show_bug.cgi?id=1382
        # and guess what?! -- #pragma GCC diagnostic ignore "-Wcomment" is
        # broken...
        env.AppendUnique(CFLAGS = [ '-Wno-comment' ])
        env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-comment' ])
elif cc  == 'clang':
    if '-Werror' in env['SWIGPY_CFLAGS']:
        env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-unused-label' ])
        if env.get('CC_HAS_FLAG',{}).get('-Wdeprecated-declarations'):
            env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-deprecated-declarations' ])
        if env.get('CC_HAS_FLAG',{}).get('-Wunused-parameter'):
            env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-unused-parameter' ])
        if (swigver < (3,)) and env.get('CC_HAS_FLAG',{}).get('-Wdeprecated-register'):
            env.AppendUnique(SWIGPY_CFLAGS = [ '-Wno-deprecated-register' ])

cxx = SConsGnu.Cc.CanonCXX(env)
if cxx == 'g++':
    if '-Werror' in env['SWIGPY_CXXFLAGS']:
        if env.get('CXX_HAS_FLAG', {}).get('-Wmaybe-uninitialized'):
            env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-maybe-uninitialized' ])
        env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-unused-parameter' ])
        env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-unused-label' ])
        env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-deprecated-declarations' ])
        env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-pedantic' ])
        env.AppendUnique(SWIGPY_SWIGFLAGS = [ '-D__GNUC__' ])
        env.AppendUnique(SWIGPY_SWIGFLAGS = [ '-D__STRICT_ANSI__' ])
        # NOTE: Original OpenCL headers have some ill-formed comments, see:
        # https://www.khronos.org/bugzilla/show_bug.cgi?id=552
        # https://www.khronos.org/bugzilla/show_bug.cgi?id=1382
        # and guess what?! -- #pragma GCC diagnostic ignore "-Wcomment" is
        # broken...
        env.AppendUnique(CXXFLAGS = [ '-Wno-comment' ])
        env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-comment' ])
elif cxx == 'clang++':
    if '-Werror' in env['SWIGPY_CXXFLAGS']:
        env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-unused-label' ])
        if env.get('CXX_HAS_FLAG',{}).get('-Wdeprecated-declarations'):
            env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-deprecated-declarations' ])
        if env.get('CXX_HAS_FLAG',{}).get('-Wunused-parameter'):
            env.AppendUnique(SWIGPY_CXXFLAGS = [ '-Wno-unused-parameter' ])
        if (swigver < (3,)) and env.get('CXX_HAS_FLAG',{}).get('-Wdeprecated-register'):
            env.AppendUnique(SWIGPY_CXXFLAGS =  ['-Wno-deprecated-register'])

# SWIGPY_LIBPATH
env.Append(SWIGPY_LIBPATH = [ '$LIBPATH' ])
#############################################################################


# Local Variables:
# # tab-width:4
# # indent-tabs-mode:nil
# # End:
# vim: set syntax=scons expandtab tabstop=4 shiftwidth=4:
