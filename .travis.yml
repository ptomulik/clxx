sudo: required
dist: trusty
language: cpp
compiler:
  - gcc
  - clang
env:
  - CL_H_VER=''    COMPILE=true  APIDOC=false
  - CL_H_VER='1.0' COMPILE=true  APIDOC=false
  - CL_H_VER='1.1' COMPILE=true  APIDOC=false
  - CL_H_VER='1.2' COMPILE=true  APIDOC=false
  - CL_H_VER='2.0' COMPILE=true  APIDOC=false
  - CL_H_VER=''    COMPILE=false APIDOC=true
before_install:
  - lsb_release -c
  - lsb_release -r
  - sudo rm -f /etc/dpkg/dpkg.cfg.d/multiarch
    #- sudo apt-add-repository 'deb http://archive.ubuntu.com/ubuntu vivid main universe multiverse restricted'
    #- sudo apt-add-repository 'deb http://archive.ubuntu.com/ubuntu trusty main universe multiverse restricted'
  - sudo apt-add-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-key update
  - sudo apt-get -y update
install:
  - ./bin/download-deps.py scons-arguments scons-arguments-gnuinstall
  - if $COMPILE; then sudo apt-get --no-install-recommends -y install g++-4.9; fi
  - if $COMPILE; then sudo apt-get --no-install-recommends -y install clang; fi
  - if $COMPILE; then
      if (clang --version | grep 'clang version 3\.3'); then
        sudo apt-get --no-install-recommends -y install libclang-common-3.3-dev;
      fi
    fi
  - sudo apt-get --no-install-recommends -y install cxxtest;
  - sudo apt-get --no-install-recommends -y install scons;
#  - sudo apt-get --no-install-recommends -y install swig
  - if $COMPILE; then
      sudo apt-get -y build-dep swig;
      sudo apt-get -y install yodl;
      ./bin/download-deps.py swig;
    fi
  - if $COMPILE; then
      sudo apt-get --no-install-recommends -y install nvidia-opencl-dev;
      (sudo apt-get --no-install-recommends -y install libegl1-mesa-dev || cat /var/log/fontconfig.log);
    fi
  - if $COMPILE; then sudo apt-get --no-install-recommends -y install libboost-dev libboost-program-options-dev libboost-serialization-dev; fi
#  - if $COMPILE; then sudo apt-get --no-install-recommends -y install libprotobuf-dev protobuf-compiler; fi
  - if $COMPILE; then sudo pip install cpp-coveralls; fi
  - if [ ! -z "$CL_H_VER" ]; then ./bin/download-deps.py --opencl-ver="$CL_H_VER" opencl-hdr; fi
  - if $APIDOC; then sudo apt-get --no-install-recommends -y install doxygen doxygen-latex; fi
  - if $APIDOC; then sudo apt-get --no-install-recommends -y install swig; fi

before_script:
  - if $COMPILE; then $CXX --version; fi
  - if $COMPILE; then $CXX -dumpversion; fi
script:
  - if $COMPILE; then scons CLXX_ENABLE_GCOV=YES --without-cl-egl && scons CLXX_ENABLE_GCOV=YES --without-cl-egl check; fi
  - if $APIDOC; then scons api-doc; fi
after_success:
    if $COMPILE; then
      GCOV=gcov-`$CXX -dumpversion | sed -e 's/^\([0-9]\+\.[0-9]\+\).*$/\1/'`;
      which $GCOV || GCOV="";
      echo $GCOV;
      if [ ! -z "$GCOV" ]; then
        coveralls --gcov $GCOV --gcov-options '\-p \-l' -b . -r .
                    -e .git -e HOWTO -e lib -e bin -e src/app -e build/app
                    -e build/.sconf_temp -e build/lib/clxx/.sconf_temp
                    -e src/doc -e src/test -e build/doc -e build/test
                    -e src/lib/swig-clxx -e build/lib/swig-clxx
                    -e src/lib/python-clxx -e build/lib/python-clxx
                    -e src/lib/clxx/cl/mocks
                    -e site_scons -e template -e valgrid -e /usr > build/coveralls.log;
      fi
    fi
after_failure:
  - if $COMPILE; then test -f src/config.log && cat src/config.log; fi
#  - test -f src/lib/clxx/config.log && cat src/lib/clxx/config.log
